<data>
   <config>
      <option name="max-sector-count" value="8" />
      <option name="max-sector-bytecount" value="16" />
   </config>
   <categories>
      <category name="327">
         <bitcounts total-unpacked="32" total-packed="3" />
         <counts total="1">
            <in-sector index="0" count="1" />
            <in-top-level-value name="sTestStruct" count="1" />
         </counts>
      </category>
      <category name="player-name">
         <bitcounts total-unpacked="168" total-packed="168" />
         <counts total="3">
            <in-sector index="0" count="1" />
            <in-sector index="1" count="2" />
            <in-top-level-value name="sTestStruct" count="3" />
         </counts>
      </category>
      <category name="second-cat">
         <bitcounts total-unpacked="32" total-packed="3" />
         <counts total="1">
            <in-sector index="0" count="1" />
            <in-top-level-value name="sTestStruct" count="1" />
         </counts>
      </category>
      <category name="test-names">
         <bitcounts total-unpacked="112" total-packed="112" />
         <counts total="2">
            <in-sector index="0" count="1" />
            <in-sector index="1" count="1" />
            <in-top-level-value name="sTestStruct" count="2" />
         </counts>
      </category>
   </categories>
   <c-types>
      <struct tag="Color" c-alignment="1" c-sizeof="3">
         <members>
            <integer name="r" type="u8" bitcount="8" min="0" />
            <integer name="g" type="u8" bitcount="8" min="0" />
            <integer name="b" type="u8" bitcount="8" min="0" />
         </members>
         <instructions>
            <integer value="r" type="u8" bitcount="8" min="0" />
            <integer value="g" type="u8" bitcount="8" min="0" />
            <integer value="b" type="u8" bitcount="8" min="0" />
         </instructions>
      </struct>
      <struct tag="NamedByTag" c-alignment="1" c-sizeof="1">
         <members>
            <integer name="data" type="u8" bitcount="8" min="0" />
         </members>
         <instructions>
            <integer value="data" type="u8" bitcount="8" min="0" />
         </instructions>
      </struct>
      <struct name="NamedByTypedef" c-alignment="1" c-sizeof="1">
         <members>
            <integer name="data" type="u8" bitcount="8" min="0" />
         </members>
         <instructions>
            <integer value="data" type="u8" bitcount="8" min="0" />
         </instructions>
      </struct>
      <struct name="NamedByTypedefOnly" c-alignment="1" c-sizeof="1">
         <members>
            <integer name="data" type="u8" bitcount="8" min="0" />
         </members>
         <instructions>
            <integer value="data" type="u8" bitcount="8" min="0" />
         </instructions>
      </struct>
      <struct tag="TestStruct" c-alignment="4" c-sizeof="128">
         <members>
            <struct name="color" type="Color" />
            <integer name="three_bit" type="u8" bitcount="3" min="0" />
            <integer name="five_bit" type="u5" bitcount="5" min="0" />
            <integer name="seven_bit" type="u8" bitcount="7" min="0" />
            <integer name="three_to_seven" type="int" bitcount="3" min="3" max="7" />
            <string name="names" type="u8[7][2]" length="7" nonstring="true">
               <array-rank extent="2" />
            </string>
            <string name="foe_name" type="u8[7]" length="7" nonstring="true">
               <default-value-string>Carter</default-value-string>
            </string>
            <integer name="single_element_array_1D" type="u8[1]" bitcount="8" min="0">
               <array-rank extent="1" />
            </integer>
            <integer name="single_element_array_2D" type="u8[1][1]" bitcount="8" min="0">
               <array-rank extent="1" />
               <array-rank extent="1" />
            </integer>
            <integer name="single_element_array_3D" type="u8[1][1][1]" bitcount="8" min="0">
               <array-rank extent="1" />
               <array-rank extent="1" />
               <array-rank extent="1" />
            </integer>
            <integer name="array" type="u5[3]" bitcount="5" min="0">
               <array-rank extent="3" />
            </integer>
            <boolean name="boolean" type="bool8" />
            <buffer name="decimals" type="float[3]" bytecount="4">
               <array-rank extent="3" />
            </buffer>
            <struct name="default_names">
               <members>
                  <omitted name="a" type="u8[7]" length="7" nonstring="true">
                     <default-value-string>Ana</default-value-string>
                  </omitted>
                  <omitted name="b" type="u8[7]" length="7" nonstring="true">
                     <default-value-string>Kris</default-value-string>
                  </omitted>
                  <omitted name="c" type="u8[7]" length="7" nonstring="true">
                     <default-value-string>Kara</default-value-string>
                  </omitted>
                  <omitted name="d" type="u8[7]" length="7" nonstring="true">
                     <default-value-string>Hilda</default-value-string>
                  </omitted>
                  <omitted name="e" type="u8[7]" length="7" nonstring="true">
                     <default-value-string>Janine</default-value-string>
                  </omitted>
                  <omitted name="f" type="u8[7]" length="7" nonstring="true">
                     <default-value-string>Darlene</default-value-string>
                  </omitted>
                  <omitted name="g" type="u8[7]" length="7" nonstring="true">
                     <default-value-string>Mary</default-value-string>
                  </omitted>
               </members>
            </struct>
            <omitted name="xml_tricky_test" type="char[12]" length="11" nonstring="false">
               <default-value-string>&lt;"xml"&gt;
&lt;&gt;</default-value-string>
            </omitted>
            <omitted name="xml_tricky_test_2" type="char[12]">
               <default-value-string>&lt;"xml"&gt;
&lt;&gt;</default-value-string>
            </omitted>
            <struct name="named_by_typedef_only" type="NamedByTypedefOnly" />
            <struct name="using_tag_name" type="NamedByTag" />
            <struct name="using_typedef_name" type="NamedByTypedef" />
         </members>
      </struct>
      <struct tag="TestStructAlt" c-alignment="1" c-sizeof="41">
         <members>
            <integer name="array_a" type="u8[19]" bitcount="6" min="0">
               <array-rank extent="19" />
            </integer>
            <integer name="array_b" type="u8[22]" bitcount="6" min="0">
               <array-rank extent="22" />
            </integer>
         </members>
      </struct>
      <struct tag="TestStructWhole" c-alignment="1" c-sizeof="19">
         <members>
            <integer name="array_a" type="u8[19]" bitcount="6" min="0">
               <array-rank extent="19" />
            </integer>
         </members>
         <instructions>
            <loop array="array_a" start="0" count="19" counter-var="__a">
               <integer value="array_a[__a]" type="u8" bitcount="6" min="0" />
            </loop>
         </instructions>
      </struct>
   </c-types>
   <sectors>
      <sector>
         <stats>
            <bitcounts total-packed="98" />
         </stats>
         <instructions>
            <struct value="sTestStruct.color" type="Color" />
            <integer value="sTestStruct.three_bit" type="u8" bitcount="3" min="0" />
            <integer value="sTestStruct.five_bit" type="u5" bitcount="5" min="0" />
            <integer value="sTestStruct.seven_bit" type="u8" bitcount="7" min="0" />
            <integer value="sTestStruct.three_to_seven" type="int" bitcount="3" min="3" max="7" />
            <string value="sTestStruct.names[0]" type="u8[7]" length="7" nonstring="true" />
         </instructions>
      </sector>
      <sector>
         <stats>
            <bitcounts total-packed="128" />
         </stats>
         <instructions>
            <string value="sTestStruct.names[1]" type="u8[7]" length="7" nonstring="true" />
            <string value="sTestStruct.foe_name" type="u8[7]" length="7" nonstring="true">
               <default-value-string>Carter</default-value-string>
            </string>
            <integer value="sTestStruct.single_element_array_1D[0]" type="u8" bitcount="8" min="0" />
            <integer value="sTestStruct.single_element_array_2D[0][0]" type="u8" bitcount="8" min="0" />
         </instructions>
      </sector>
      <sector>
         <stats>
            <bitcounts total-packed="608" />
         </stats>
         <instructions>
            <integer value="sTestStruct.single_element_array_3D[0][0][0]" type="u8" bitcount="8" min="0" />
            <loop array="sTestStruct.array" start="0" count="3" counter-var="__a">
               <integer value="sTestStruct.array[__a]" type="u5" bitcount="5" min="0" />
            </loop>
            <boolean value="sTestStruct.boolean" type="bool8" />
            <loop array="sTestStruct.decimals" start="0" count="3" counter-var="__b">
               <buffer value="sTestStruct.decimals[__b]" type="float" bytecount="4" />
            </loop>
            <omitted value="sTestStruct.default_names.a" type="u8[7]" length="7" nonstring="true">
               <default-value-string>Ana</default-value-string>
            </omitted>
            <omitted value="sTestStruct.default_names.b" type="u8[7]" length="7" nonstring="true">
               <default-value-string>Kris</default-value-string>
            </omitted>
            <omitted value="sTestStruct.default_names.c" type="u8[7]" length="7" nonstring="true">
               <default-value-string>Kara</default-value-string>
            </omitted>
            <omitted value="sTestStruct.default_names.d" type="u8[7]" length="7" nonstring="true">
               <default-value-string>Hilda</default-value-string>
            </omitted>
            <omitted value="sTestStruct.default_names.e" type="u8[7]" length="7" nonstring="true">
               <default-value-string>Janine</default-value-string>
            </omitted>
            <omitted value="sTestStruct.default_names.f" type="u8[7]" length="7" nonstring="true">
               <default-value-string>Darlene</default-value-string>
            </omitted>
            <omitted value="sTestStruct.default_names.g" type="u8[7]" length="7" nonstring="true">
               <default-value-string>Mary</default-value-string>
            </omitted>
            <omitted value="sTestStruct.xml_tricky_test" type="char[12]" length="11" nonstring="false">
               <default-value-string>&lt;"xml"&gt;
&lt;&gt;</default-value-string>
            </omitted>
            <omitted value="sTestStruct.xml_tricky_test_2" type="char[12]">
               <default-value-string>&lt;"xml"&gt;
&lt;&gt;</default-value-string>
            </omitted>
            <struct value="sTestStruct.named_by_typedef_only" type="NamedByTypedefOnly" />
         </instructions>
      </sector>
      <sector>
         <stats>
            <bitcounts total-packed="16" />
         </stats>
         <instructions>
            <struct value="sTestStruct.using_tag_name" type="NamedByTag" />
            <struct value="sTestStruct.using_typedef_name" type="NamedByTypedef" />
         </instructions>
      </sector>
      <sector>
         <stats>
            <bitcounts total-packed="126" />
         </stats>
         <instructions>
            <loop array="(*sTestStructAltPtr).array_a" start="0" count="19" counter-var="__a">
               <integer value="(*sTestStructAltPtr).array_a[__a]" type="u8" bitcount="6" min="0" />
            </loop>
            <loop array="(*sTestStructAltPtr).array_b" start="0" count="2" counter-var="__b">
               <integer value="(*sTestStructAltPtr).array_b[__b]" type="u8" bitcount="6" min="0" />
            </loop>
         </instructions>
      </sector>
      <sector>
         <stats>
            <bitcounts total-packed="120" />
         </stats>
         <instructions>
            <loop array="(*sTestStructAltPtr).array_b" start="2" count="20" counter-var="__a">
               <integer value="(*sTestStructAltPtr).array_b[__a]" type="u8" bitcount="6" min="0" />
            </loop>
         </instructions>
      </sector>
      <sector>
         <stats>
            <bitcounts total-packed="114" />
         </stats>
         <instructions>
            <struct value="(*sTestStructWholePtr)" type="TestStructWhole" />
         </instructions>
      </sector>
   </sectors>
</data>