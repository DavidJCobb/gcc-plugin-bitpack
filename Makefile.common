# Common makefile to be included from all other makefiles

################################################################

#
# Input parameters:
#
#    PLUGIN
#       The plug-in file, e.g. `myplugin.so`. Required.
#
#    INCDIR
#       The plug-in's top-level directory for headers. Required.
#
#    GCCVER
#       The GCC version number for the target compiler. Defaults 
#       to 11.4.0.  Note that we currently  use the same version 
#       of the build compiler too.
#
#    TARGET_MACHINE
#       If specified, the target architecture;  for example, you 
#       could use `arm-none-eabi` (no quotes) to build the plug-
#       in for the ARM EABI compiler.
#
#    TARGET_COMPILER
#       If specified,  overrides all other configuration for the 
#       target compiler.  We will build using the given compiler 
#       and pull GMP from the given `GCCVER`. This should be the
#       C compiler. Builds object files to `build/bespoke/`.
#

################################################################

#
# BUILD_... variables refer to the compiler that you're using to 
# build the plug-in.
#
# TARGET_... variables refer to the compiler that the plug-in is 
# being built to run in, and the architecture for which the plug-
# in will produce code.
#

ifndef GCCVER
override GCCVER = 11.4.0
endif
BUILD_GCCVER=$(GCCVER)
TARGET_GCCVER=$(GCCVER)

ifdef TARGET_MACHINE
override TARGET_MACHINE := $(TARGET_MACHINE)-
endif

TARGET_INSTALLDIR=$(HOME)/gcc/install/$(TARGET_GCCVER)
TARGET_GMPDIR=$(HOME)/gcc/build/$(TARGET_GCCVER)/gmp

BUILD_INSTALLDIR=$(HOME)/gcc/install/$(BUILD_GCCVER)

BUILD_CC=$(BUILD_INSTALLDIR)/bin/gcc
BUILD_CXX=$(BUILD_INSTALLDIR)/bin/g++

PLUGINFLAG=-fplugin=./$(PLUGIN)

TARGET_CC=$(TARGET_INSTALLDIR)/bin/$(TARGET_MACHINE)gcc $(PLUGINFLAG)
TARGET_CXX=$(TARGET_INSTALLDIR)/bin/$(TARGET_MACHINE)g++ $(PLUGINFLAG)

BUILD_OBJECT_PATH=build/$(TARGET_GCCVER)
ifdef TARGET_COMPILER
override TARGET_CC=$(TARGET_COMPILER)
BUILD_OBJECT_PATH=build/bespoke
endif

ifndef TARGET_PLUGINDIR
override TARGET_PLUGINDIR=$(shell $(TARGET_CC) -print-file-name=plugin)
endif

BUILD_CXXFLAGS=-std=gnu++20 -fPIC -Wall -g -fno-rtti -I$(TARGET_PLUGINDIR)/include -I$(TARGET_GMPDIR) -I$(INCDIR)
# This is a side effect of using C++11
BUILD_CXXFLAGS+=-Wno-literal-suffix

BUILD_LDFLAGS=
BUILD_LDADD=

END=
OBJECTS=$(patsubst src/%.cpp,$(BUILD_OBJECT_PATH)/%.o,$(SOURCES))

all: $(PLUGIN)

$(PLUGIN): $(OBJECTS)
	$(BUILD_CXX) $(BUILD_LDFLAGS) -o $@ -shared $+ $(BUILD_LDADD)

$(BUILD_OBJECT_PATH)/%.o: src/%.cpp
	$(shell mkdir -p $(dir $@))
	$(BUILD_CXX) -c -o $@ $(BUILD_CXXFLAGS) $<


.PHONY: all clean test
clean:
	rm -f $(OBJECTS) $(PLUGIN)